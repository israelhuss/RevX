@page "/sessions"
@using RevXPortal.Models

<style>
    .grid {
        border: solid 1px #626263;
        border-radius: 4.5px;
        text-align: center;
        margin: 1rem;
        height: 75vh;
        overflow: hidden;
    }

    th {
        font-size: 1.3rem;
    }

    .custom-select:focus {
        box-shadow: none;
    }

    .valid.modified:not([type=checkbox]) {
        outline: none;
        border: solid 1px #26b050;
    }
</style>

<div class="d-flex justify-content-between">
    <h3>Sessions</h3>

    <button class="btn btn-primary">Add Session</button>
</div>

<div class="grid">
    <table class="table table-bordered table-striped" style="margin-top: -1px">
        <thead>
            <tr>
                <th></th>
                <th>Student</th>
                <th>Date</th>
                <th>Start Time</th>
                <th>End Time</th>
                <th>Provider</th>
                <th>Billing Status</th>
                <th>Notes</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var session in sessions)
            {
                <tr>
                    <td><input type="checkbox" class="custom-checkbox"/></td>
                    <td>@session.Student</td>
                    <td>@session.Date.ToShortDateString()</td>
                    <td>@session.StartTime.ToString()</td>
                    <td>@session.EndTime</td>
                    <td>@session.Provider</td>
                    <td>@session.BillingStatus</td>
                    <td>@session.Notes</td>
                </tr>
            }
        </tbody>
    </table>
    

    @* Main Row if sessions is empty
        <div class="empty-table-cell grid-cell">
            <h4>Please click here to enter a session</h4>
        </div>
    *@
    
</div>



@code {
    public DisplaySessionModel DisplaySession = new();
    private List<SessionModel> sessions = new();

    private List<string> availableStudents = new() { "Duvi Schwartz", "Mendy Surkis", "Shaya Spitzer" };
    private List<string> providers = new() { "Encore", "Legadel" };
    private List<string> billingStatus = new() { "Open", "Invoiced", "Paid" };


    protected override Task OnInitializedAsync()
    {
        sessions.Add(new SessionModel
        {
            Student = "Duvi Shwartz",
            Date = DateTime.Now,
            StartTime = new TimeSpan(1, 00, 00),
            EndTime = new TimeSpan(3, 00, 00),
            Provider = "Legadel",
            BillingStatus = "Open",
            Notes = "I was very tired!!"
        });
        sessions.Add(new SessionModel
        {
            Student = "Mendy Surkis",
            Date = DateTime.Now.AddDays(2),
            StartTime = new TimeSpan(10, 00, 00),
            EndTime = new TimeSpan(12, 00, 00),
            Provider = "Encore",
            BillingStatus = "Open",
            Notes = "I still am..."
        });
        return Task.CompletedTask;
    }

}

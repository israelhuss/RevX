@page "/sessions"
@using RevXPortal.Models

<style>

	.grid {
		border: solid 1px #626263;
		border-radius: 4.5px;
		text-align: center;
		margin: 1rem;
		height: 75vh;
		overflow: hidden;
	}

	th {
		font-size: 1.3rem;
	}

	.d-flex {
		align-items: baseline;
	}

	.custom-select {
		width: max-content;
	}

	.custom-select:focus {
		box-shadow: none;
	}

	.valid.modified:not([type=checkbox]) {
		outline: none;
		border: solid 1px #26b050;
	}

	.modal {
		background-color: rgb(0 0 0 / 0.70)
	}

	.fade-in {
		animation: fade-in;
		animation-duration: .6s;
	}
	
</style>

<div class="d-flex justify-content-between">
	<h3>Sessions</h3>

	<button class="btn btn-primary" @onclick="ToggleModal">Add Session</button>
</div>

<div class="grid">
	<table class="table table-bordered table-striped" style="margin-top: -1px">
		<thead>
			<tr>
				<th></th>
				<th>Student</th>
				<th>Date</th>
				<th>Start Time</th>
				<th>End Time</th>
				<th>Provider</th>
				<th>Billing Status</th>
				<th>Notes</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var session in sessions)
			{
				<tr>
					<td><input type="checkbox" class="custom-checkbox" /></td>
					<td>@session.Student</td>
					<td>@session.Date.ToShortDateString()</td>
					<td>@session.StartTime</td>
					<td>@session.EndTime</td>
					<td>@session.Provider</td>
					<td>@session.BillingStatus</td>
					<td>@session.Notes</td>
				</tr>
			}
		</tbody>
	</table>


	@* Main Row if sessions is empty
		<div class="empty-table-cell grid-cell">
			<h4>Please click here to enter a session</h4>
		</div>
	*@

</div>



@if (ShowDialog)
{
<div class="modal show d-block" tabindex="-1" role="dialog">
	<div class="modal-dialog modal-dialog-centered fade-in" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Add A Session</h5>
				<button type="button" class="close btn" @onclick="ToggleModal">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<EditForm Model="DisplaySession">
					<div class="d-flex justify-content-around">
						<label for="Student">Student</label>
						<InputSelect TValue="Student" class="custom-select" @bind-value="@DisplaySession.Student">
							@foreach (var student in Enum.GetValues(typeof(Student)))
							{
								<option>@student</option>
							}
						</InputSelect>
					</div>
					<div class="d-flex justify-content-around">
						<label for="date">Date</label>
						<InputDate @bind-Value="@DisplaySession.Date"></InputDate>
					</div>
				</EditForm>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" @onclick="ToggleModal">Close</button>
				<button type="button" class="btn btn-primary">Save changes</button>
			</div>
		</div>
	</div>
</div>
}


@code {
	private bool ShowDialog = false;
	public DisplaySessionModel DisplaySession = new();
	private List<SessionModel> sessions = new();

	private List<string> availableStudents = new() { "Duvi Schwartz", "Mendy Surkis", "Shaya Spitzer" };
	private List<string> providers = new() { "Encore", "Legadel" };
	private List<string> billingStatus = new() { "Open", "Invoiced", "Paid" };


	protected override Task OnInitializedAsync()
	{
		sessions.Add(new SessionModel
		{
			Student = "Duvi Shwartz",
			Date = DateTime.Now,
			StartTime = new TimeSpan(1, 00, 00),
			EndTime = new TimeSpan(3, 00, 00),
			Provider = "Legadel",
			BillingStatus = "Open",
			Notes = "I was very tired!!"
		});
		sessions.Add(new SessionModel
		{
			Student = "Mendy Surkis",
			Date = DateTime.Now.AddDays(2),
			StartTime = new TimeSpan(10, 00, 00),
			EndTime = new TimeSpan(12, 00, 00),
			Provider = "Encore",
			BillingStatus = "Open",
			Notes = "I still am..."
		});
		return Task.CompletedTask;
	}

	private void ToggleModal()
	{
		ShowDialog = !ShowDialog;
	}

}

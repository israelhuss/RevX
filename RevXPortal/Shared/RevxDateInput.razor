
<div class="revx-input @(PlaceHolder is not null ? "has-placeholder" : "")">
	<div class="revx-input-icon">
		<i class="fas fa-calendar-alt"></i>
	</div>
	<input class="form-control revx-input-box @(ValidationMessage is not null ? "validate" : "")" type="date" min="@Min" max="@Max" @onchange="InputChanged" />
	@if (PlaceHolder is not null)
	{
		<div class="revx-input-label fixed">
			@PlaceHolder
			@*@if (Required)
				{
				<span style="color: red;">*</span>
				}*@
		</div>
	}
	@if (ValidationMessage is not null)
	{
		<small class="revx-validate" style="color: red; margin-left: 3px;">@ValidationMessage</small>
	}
</div>

@code {
	[Parameter]
	public DateOnly Value { get; set; }
	[Parameter]
	public EventCallback<DateOnly> ValueChanged { get; set; }
	[Parameter]
	public string ValidationMessage { get; set; }
	[Parameter]
	public string PlaceHolder { get; set; }
	[Parameter]
	public string Min { get; set; } = "2021-01-01";
	[Parameter]
	public string Max { get; set; } = "2025-01-01";

	private void InputChanged(ChangeEventArgs e)
	{
		Value = DateOnly.Parse(e.Value.ToString());
		ValueChanged.InvokeAsync(Value);
	}
}

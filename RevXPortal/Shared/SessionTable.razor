@inject IJSRuntime jsRuntime

@using System.Globalization
<style>
	.session-table-outer {
		max-height: 90vh;
		overflow: auto;
		width: 80%;
		margin: 1.60rem auto;
	}

	.table {
		width: 100%;
		position: relative;
	}

		.table thead tr th {
			position: sticky;
			top: 0;
			z-index: 1;
		}
</style>

@if (Sessions is not null)
{
	<div class="session-table-outer">
		<table class="table table-bordered table-striped">
			<thead>
				<tr>
					<th>@(WorkplaceInfo is not null && WorkplaceInfo.ClientNickname is not null ? WorkplaceInfo.ClientNickname : "Client")</th>
					<th>Date</th>
					<th>Duration</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var session in Sessions)
				{
					<tr>
						<td>@session.Client.DisplayName</td>
						<td>@(DateOnly.FromDateTime(session.Date))</td>
						<td>@((session.EndTime - session.StartTime).ToString("hh\\:mm").TrimStart(new Char[] { '0' }))</td>
					</tr>
				}
			</tbody>
		</table>
	</div>

}


@code {
	[CascadingParameter]
	public WorkplaceModel WorkplaceInfo { get; set; }

	[Parameter]
	public List<ManageSessionModel> Sessions { get; set; }

	protected override void OnParametersSet()
	{
		jsRuntime.InvokeVoidAsync("log", WorkplaceInfo?.ClientNickname);
	}
}

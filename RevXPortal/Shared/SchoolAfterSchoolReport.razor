@inject IReportEndpoint _reportEndpoint
@inject NavigationManager NavManager
@inject IJSRuntime jsRuntime


<div class="form-group">
    <label class="col-form-label">
        Report End Date
    </label>
    <input type="text" class="form-control form-inline" @bind-value="@EndDate" @onkeyup="@DateChanged" />
</div>

<StackedBarContainer>
    <StackedBarHeader BarOneTitle="School Hours" BarTwoTitle="After School Hours" PrimaryTitle="Encore" SecondaryTitle="Legadel" BarOneTotals="0" BarTwoTotals="0"></StackedBarHeader>
    <StackedBarChart RowCount="6" Data="results"></StackedBarChart>
</StackedBarContainer>


@code {
    public string EndDate { get; set; } = DateTime.Now.ToString("d");

    public IEnumerable<IncomeReportModel> results { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await RefreshReportData(endDate: EndDate);
    }

    private async Task RefreshReportData(string endDate, string startDate = "2020-09-01", string reportBy = "month")
    {
        results = await _reportEndpoint.GetMonthlyIncome(DateTime.Parse(startDate), DateTime.Parse(endDate), reportBy);
        foreach (var item in results)
        {
            item.Title = DateTime.Parse(item.Date).ToString("MMMM");
        }
    }

    private async void DateChanged(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await RefreshReportData(endDate: EndDate);
        }
    }
}

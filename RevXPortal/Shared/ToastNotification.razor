@inject RevXPortal.Services.IToastService toastService
<style>
    .toast {
        display: none;
        padding: .25rem .5rem;
        color: #fff;
        z-index: 1000;
        position: absolute;
        top: 3rem;
        border-radius: 1rem;
        left: calc(50% + 100px);
        transform: translate(-50%, 0);
    }

    .toast-icon {
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: 0 1rem;
        font-size: 2.5rem;
    }

    .toast-body {
        display: flex;
        flex-direction: column;
        flex: 1;
        padding-left: 1rem;
    }

        .toast-body p {
            margin-bottom: 0;
            font-size: 1rem;
        }
        .toast-icon i {
            font-size: 1rem;
        }

    .toast-visible {
        display: flex;
        flex-direction: row;
        animation: fade-in 3s;
    }
</style>


<div class="toast @(IsVisible ? "toast-visible" : null) @BackgroundCssClass">
    <div class="toast-icon">
        <i class="fa fa-@IconCssClass" aria-hidden="true"></i>
    </div>
    <div class="toast-body">
        <p>@Message</p>
    </div>
</div>


@code {
    protected string Message { get; set; }
    protected bool IsVisible { get; set; }
    protected string BackgroundCssClass { get; set; }
    protected string IconCssClass { get; set; }

    protected override void OnInitialized()
    {
        toastService.OnShow += ShowToast;
        toastService.OnHide += HideToast;
    }

    private void ShowToast(string message, ToastLevel level)
    {
        BuildToastSettings(level, message);
        IsVisible = true;
        StateHasChanged();
    }

    private void HideToast()
    {
        IsVisible = false;
        StateHasChanged();
    }

    private void BuildToastSettings(ToastLevel level, string message)
    {
        switch (level)
        {
            case ToastLevel.Info:
                BackgroundCssClass = "bg-info";
                IconCssClass = "info";
                break;
            case ToastLevel.Success:
                BackgroundCssClass = "bg-success";
                IconCssClass = "check";
                break;
            case ToastLevel.Warning:
                BackgroundCssClass = "bg-warning";
                IconCssClass = "exclamation";
                break;
            case ToastLevel.Error:
                BackgroundCssClass = "bg-danger";
                IconCssClass = "times";
                break;
        }

        Message = message;
    }

    public void Dispose()
    {
        toastService.OnShow -= ShowToast;
    }
}
